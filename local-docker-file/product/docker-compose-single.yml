# ---------------------------------------------------------------------------------------------------------------------
# PRODUCT MICROSERVICES CREATION

# This command starts the containers in detached mode without rebuilding the images if they already exist
# docker-compose -p product-service-single -f docker-compose-single.yml up -d

# This command rebuilds images even if they exist
# RUN THIS IF CHANGES WERE ONLY DONE IN THIS FILE. UPDATES CONTAINERS WITH NEW CONFIGURATIONS AND KEEPS DATA/VOLUMES
# docker-compose -p product-service-single -f docker-compose-single.yml up -d --build

# This command stops and removes containers and volumes
# docker-compose -p product-service-single -f docker-compose-single.yml down -v

# DOCKER-COMPOSE FILE IS MEANT TO BE RUN ONCE

# ---------------------------------------------------------------------------------------------------------------------


version: '3.9'

services:

  product-service-mongodb:
    image: mongo
    container_name: product-service-mongodb
    ports:
      - "27018:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=password
      - MONGO_INITDB_DATABASE=product-service
    volumes:
      - ./data/product:/data/db   # Persists data on host machine even if container restarts.
      - ./init/product/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js  # Initializes on first startup.
    #    command: mongod -auth
    networks:
      - spring

  product-mongo-express:
    image: mongo-express
    container_name: product-service-express
    ports:
      - "8082:8082"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=admin
      - ME_CONFIG_MONGODB_ADMINPASSWORD=password
      - ME_CONFIG_MONGODB_SERVER=product-service-mongodb
    depends_on:   # What will start before this service.
      - product-service-mongodb
    networks:
      - spring


# Optional for persisting data
#volumes:
#  mongo-db:
#    driver: local


networks:
  spring:
    driver: bridge